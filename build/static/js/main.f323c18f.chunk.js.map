{"version":3,"sources":["components/Filter.js","components/Form.js","components/Contacts.js","components/Header.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","Form","props","onSubmit","addContact","newName","handleName","newNumber","handleNumber","type","Contacts","persons","deleteContactAction","map","person","key","id","name","number","onClick","Header","title","baseUrl","axios","get","then","response","data","contact","post","delete","put","Notification","message","error","style","color","backgroundColor","fontSize","border","margin","padding","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setError","useEffect","personService","initialPersons","setTimeout","personsToShow","toLowerCase","includes","addNotification","event","target","preventDefault","sameNameContact","window","confirm","updatedContact","catch","returnedContact","concat","finally","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f323c18f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ filter, handleFilter }) => (\n    <div>\n        name: <input value={filter} onChange={handleFilter} />\n    </div>\n);\n\nexport default Filter;\n","import React from 'react';\nconst Form = props => (\n    <form onSubmit={props.addContact}>\n        <div>\n            name: <input value={props.newName} onChange={props.handleName} />\n        </div>\n        <div>\n            number: <input value={props.newNumber} onChange={props.handleNumber} />\n        </div>\n        <div>\n            <button type='submit'>add</button>\n        </div>\n    </form>\n);\n\nexport default Form;\n","import React from 'react';\n\nconst Contacts = ({ persons, deleteContactAction }) =>\n    persons.map(person => (\n        <div key={person.id}>\n            {person.name} {person.number}\n            <button onClick={() => deleteContactAction(person.id, person.name)}>delete</button>\n        </div>\n    ));\n\nexport default Contacts;\n","import React from 'react';\n\nconst Header = ({ title }) => <h2>{title}</h2>;\n\nexport default Header;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data);\n};\n\nconst create = contact => {\n    const request = axios.post(baseUrl, contact);\n    return request.then(response => response.data);\n};\n\nconst update = contact => {\n    const request = axios.put(`${baseUrl}/${contact.id}`, contact);\n    return request.then(response => response.data);\n};\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data);\n};\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update,\n};\n","import React from 'react';\n\nconst Notification = ({ message, error }) => {\n    const style = {\n        color: error ? 'red' : 'green',\n        backgroundColor: '#D3D3D3',\n        fontSize: 20,\n        border: error ? '2px solid red' : '2px solid green',\n        margin: '10px',\n        padding: '5px',\n    };\n\n    if (message === null) {\n        return null;\n    }\n\n    return <div style={style}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Header from './components/Header';\nimport personService from './services/persons';\nimport Notification from './components/Notification';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [message, setMessage] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        personService.getAll().then(initialPersons => setPersons(initialPersons));\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setMessage(null);\n            setError(null);\n        }, 5000);\n    }, [message]);\n\n    const personsToShow =\n        filter === ''\n            ? persons\n            : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()));\n\n    const handleFilter = event => {\n        setFilter(event.target.value);\n    };\n\n    const handleName = event => {\n        setNewName(event.target.value);\n    };\n\n    const handleNumber = event => {\n        setNewNumber(event.target.value);\n    };\n\n    const addNotification = (message, error) => {\n        setError(error);\n        setMessage(message);\n        setNewName('');\n        setNewNumber('');\n    };\n\n    const addContact = event => {\n        event.preventDefault();\n        const sameNameContact = persons.filter(person => person.name === newName)[0];\n\n        if (newName === '' || newNumber === '') {\n            addNotification('Fields should not be empty', true);\n        } else if (sameNameContact) {\n            const confirm = window.confirm(`${sameNameContact.name} is already added to phonebook,\n                replace the old number with a  new one?`);\n            if (confirm) {\n                personService\n                    .update({ ...sameNameContact, number: newNumber })\n                    .then(updatedContact => {\n                        setPersons(\n                            persons.map(person => (person.id === sameNameContact.id ? updatedContact : person))\n                        );\n                        addNotification(`Contact ${newName} was successfully updated`, false);\n                    })\n                    .catch(() => {\n                        setPersons(persons.filter(person => person.id !== sameNameContact.id));\n                        addNotification(`Contact ${newName} does not exists`, true);\n                    });\n            }\n        } else {\n            const newContact = { name: newName, number: newNumber };\n            personService.create(newContact).then(returnedContact => {\n                setPersons(persons.concat(returnedContact));\n                addNotification(`Added ${returnedContact.name}`, false);\n            });\n        }\n    };\n\n    const deleteContact = (id, name) => {\n        if (window.confirm(`Delete ${name}?`)) {\n            personService\n                .remove(id)\n                .then(() => {\n                    addNotification(`Information of ${name} has been removed from server`, false);\n                })\n                .catch(() => {\n                    addNotification(`Information of ${name} has already been removed from server`, true);\n                })\n                .finally(() => {\n                    setPersons(persons.filter(person => person.id !== id));\n                });\n        }\n    };\n\n    return (\n        <div>\n            <Header title='Phonebook' />\n            <Notification message={message} error={error} />\n            <Filter filter={filter} handleFilter={handleFilter} />\n            <Header title='add a new' />\n            <Form\n                newName={newName}\n                newNumber={newNumber}\n                addContact={addContact}\n                handleName={handleName}\n                handleNumber={handleNumber}\n            />\n            <Header title='Numbers' />\n            <Contacts persons={personsToShow} deleteContactAction={deleteContact} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}